extern crate mini_functions_date;
use self::mini_functions_date::Date;

pub fn main() {
    let date = Date::new().date();
    println!("ğŸ¦€ date:                 âœ… {:?}", date);

    let day = Date::new().day();
    println!("ğŸ¦€ day:                  âœ… {:?}", day);

    let hour = Date::new().hour();
    println!("ğŸ¦€ hour:                 âœ… {:?}", hour);

    let iso_8601 = Date::new().iso_8601();
    println!("ğŸ¦€ iso_8601:             âœ… {:?}", iso_8601);

    let iso_week = Date::new().iso_week();
    println!("ğŸ¦€ iso_week:             âœ… {:?}", iso_week);

    let microsecond = Date::new().microsecond();
    println!("ğŸ¦€ microsecond:          âœ… {:?}", microsecond);

    let millisecond = Date::new().millisecond();
    println!("ğŸ¦€ millisecond:          âœ… {:?}", millisecond);

    let minute = Date::new().minute();
    println!("ğŸ¦€ minute:               âœ… {:?}", minute);

    let month = Date::new().month();
    println!("ğŸ¦€ month:                âœ… {:?}", month);

    let nanosecond = Date::new().nanosecond();
    println!("ğŸ¦€ nanosecond:           âœ… {:?}", nanosecond);

    let offset = Date::new().offset();
    println!("ğŸ¦€ offset:               âœ… {:?}", offset);

    let ordinal = Date::new().ordinal();
    println!("ğŸ¦€ ordinal:              âœ… {:?}", ordinal);

    let second = Date::new().second();
    println!("ğŸ¦€ second:               âœ… {:?}", second);

    let time = Date::new().time();
    println!("ğŸ¦€ time:                 âœ… {:?}", time);

    let weekday = Date::new().weekday();
    println!("ğŸ¦€ weekday:              âœ… {:?}", weekday);

    let year = Date::new().year();
    println!("ğŸ¦€ year:                 âœ… {:?}", year);
}
